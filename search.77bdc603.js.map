{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,uCAEMC,EAAYC,SAASC,cACzB,mBAEIC,EAAYF,SAASC,cAAc,U,SAa1BE,I,OAAAC,EAAOC,MAAAC,KAAAC,U,UAAPH,I,OAAAA,EAAfI,EAAAX,EAAA,CAAAW,EAAAC,GAAAC,MAAA,SAAAC,I,IAEYC,EACFC,E,2FADiBC,EAAAC,IAAIC,Y,OAArBJ,EAAMK,EAAAC,KAAJN,KACFC,EAAmB,aAAwCM,OAA3BP,EAAKQ,KAAK,GAAGC,cAAc,8CACjEC,EAAAC,QAAQC,OAAOC,UAAYZ,E,gDAE3Ba,QAAQC,IAAGV,EAAAW,I,yBAEXN,EAAAC,QAAQM,KAAKC,Q,6EARKzB,MAAAC,KAAAC,U,UAWPwB,I,OAAAC,EAAQ3B,MAAAC,KAAAC,U,UAARyB,I,OAAAA,EAAfxB,EAAAX,EAAA,CAAAW,EAAAC,GAAAC,MAAA,SAAAC,I,IAEYC,EAEFqB,E,2FAFiBnB,EAAAC,IAAImB,mB,OAArBtB,EAAMK,EAAAC,KAAJN,KAEFqB,EAAoBrB,EAAK,GAAGuB,SAAS,GAAGC,YAAY,GAAGC,WAC7Df,EAAAC,QAAQe,UAAUb,UAAYb,EAAK,GAAG2B,KACtCrC,EAAUsC,IAAM5B,EAAK,GAAG6B,UAAU,GAAGC,MACrC3C,EAAU4C,YAAcV,E,kDAExBP,QAAQC,IAAGV,EAAAW,I,2DATQvB,MAAAC,KAAAC,U,CAtBvBJ,IACA4B,IACAT,EAAAC,QAAQM,KAAKe,iBAAiB,UAC9B,SAAoBC,GAClBA,EAAEC,iBACF,IAAIC,EAAYF,EAAEG,cAAcC,SAASC,YAAYC,MAAMC,OAE3D,GADAtC,EAAAC,IAAIsC,MAAQN,EACM,KAAdA,EAAkB,OACtB5C,IACA4B,G","sources":["src/search.ts"],"sourcesContent":["import { api } from './fetch';\nimport { objRefs } from './refs';\nconst textDescr = document.querySelector(\n  '[text-describe]'\n) as HTMLParagraphElement;\nconst voisWords = document.querySelector('.music') as HTMLAudioElement;\n\ntakeImg();\ntakeWord();\nobjRefs.form.addEventListener('submit', makeOnSubm);\nfunction makeOnSubm(e): void {\n  e.preventDefault();\n  let inputForm = e.currentTarget.elements.searchQuery.value.trim();\n  api.query = inputForm;\n  if (inputForm === '') return;\n  takeImg();\n  takeWord();\n}\nasync function takeImg() {\n  try {\n    const { data } = await api.makeFetch();\n    const template: string = `<img src=\"${data.hits[4].largeImageURL}\" class=\"img-fluid\" height=\"300px\" alt=\"\">`;\n    objRefs.divImg.innerHTML = template;\n  } catch (err) {\n    console.log(err);\n  } finally {\n    objRefs.form.reset();\n  }\n}\nasync function takeWord() {\n  try {\n    const { data } = await api.makeEnglishWords();\n    // console.log(data[0].meanings[0].definitions[2]);\n    const desrcWord: string = data[0].meanings[0].definitions[1].definition;\n    objRefs.newScreen.innerHTML = data[0].word;\n    voisWords.src = data[0].phonetics[0].audio;\n    textDescr.textContent = desrcWord;\n  } catch (err) {\n    console.log(err);\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$0898067c0542d709$var$textDescr","document","querySelector","$0898067c0542d709$var$voisWords","$0898067c0542d709$var$takeImg","$0898067c0542d709$var$_takeImg","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","data","template","$jJoVl","api","makeFetch","_ctx","sent","concat","hits","largeImageURL","$iAIU8","objRefs","divImg","innerHTML","console","log","t0","form","reset","$0898067c0542d709$var$takeWord","$0898067c0542d709$var$_takeWord","desrcWord","makeEnglishWords","meanings","definitions","definition","newScreen","word","src","phonetics","audio","textContent","addEventListener","e","preventDefault","inputForm","currentTarget","elements","searchQuery","value","trim","query"],"version":3,"file":"search.77bdc603.js.map"}